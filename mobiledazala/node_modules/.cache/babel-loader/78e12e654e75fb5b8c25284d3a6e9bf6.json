{"ast":null,"code":"var _jsxFileName = \"D:\\\\NYP\\\\Y2S1\\\\AdvProg\\\\AVP\\\\AVP\\\\mobiledazala\\\\src\\\\pages\\\\Tab2.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonLoading, IonButton } from '@ionic/react';\nimport useLocalStorage from '../components/LocalStorage';\nimport './Tab2.css';\n\nconst Tab2 = () => {\n  const [chats, setChats] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const [api, setAPI] = useLocalStorage('api', \"https://localhost:5001\");\n  const [userid, setUserID] = useLocalStorage('userid', \"anonymous\");\n\n  const fetchChats = async () => {\n    fetch(`${api}/api/chat/all`).then(res => res.json()).then(setChats).finally(() => setShowLoading(false));\n  };\n\n  useEffect(() => {\n    fetchChats();\n  }, []\n  /*[chats]*/\n  );\n\n  const makeLink = chat => {\n    return \"/tab3/\" + chat.id;\n  };\n\n  const newChat = async () => {\n    const newChat = {\n      userId: userid\n    };\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(newChat),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    };\n    fetch(`${api}/api/chat/new/`, options).then(res => res.json()).then(_ => fetchChats());\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    class: \"tab-pos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Tab 2\"), \" \", /*#__PURE__*/React.createElement(IonLabel, {\n    class: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 54\n    }\n  }, userid))), /*#__PURE__*/React.createElement(IonContent, {\n    className: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: showLoading,\n    onDidDismiss: () => setShowLoading(false),\n    message: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, chats.map((item, index) => /*#__PURE__*/React.createElement(IonItem, {\n    key: index,\n    routerLink: makeLink(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, item.createdAt), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, item.userId))))), /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    expand: \"block\",\n    onClick: () => newChat(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Create New\"))));\n};\n\nexport default Tab2;","map":{"version":3,"sources":["D:/NYP/Y2S1/AdvProg/AVP/AVP/mobiledazala/src/pages/Tab2.tsx"],"names":["React","useState","useEffect","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonList","IonItem","IonLabel","IonLoading","IonButton","useLocalStorage","Tab2","chats","setChats","showLoading","setShowLoading","api","setAPI","userid","setUserID","fetchChats","fetch","then","res","json","finally","makeLink","chat","id","newChat","userId","options","method","body","JSON","stringify","headers","Headers","_","map","item","index","createdAt"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonLoading,\r\n  IonButton\r\n} from '@ionic/react';\r\nimport useLocalStorage from '../components/LocalStorage'\r\nimport './Tab2.css';\r\n\r\ninterface Product {\r\n  \r\n}\r\n\r\nconst Tab2: React.FC = () => {\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n  const [showLoading, setShowLoading] = useState<boolean>(true);\r\n  const [api, setAPI] = useLocalStorage('api', \"https://localhost:5001\");\r\n  const [userid, setUserID] = useLocalStorage('userid', \"anonymous\");\r\n\r\n  const fetchChats = async () => {\r\n    fetch(`${api}/api/chat/all`)\r\n      .then(res => res.json()).then(setChats).finally(() => setShowLoading(false))\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats()\r\n  }, []/*[chats]*/)\r\n\r\n  const makeLink = (chat: Chat) => { return \"/tab3/\" + chat.id }\r\n\r\n  const newChat = async () => {\r\n    const newChat = {\r\n      userId: userid\r\n    }\r\n    const options = {\r\n      method: 'POST',\r\n      body: JSON.stringify(newChat),\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }\r\n    fetch(`${api}/api/chat/new/`, options)\r\n      .then(res => res.json())\r\n      .then(_ => fetchChats())\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle class=\"tab-pos\">Tab 2</IonTitle> <IonLabel class=\"right\">{userid}</IonLabel>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent className=\"ion-padding\">\r\n        <IonLoading\r\n          isOpen={showLoading}\r\n          onDidDismiss={() => setShowLoading(false)}\r\n          message={'Loading...'}\r\n        />\r\n        <IonList>\r\n          {chats.map((item, index) => (\r\n            <IonItem key={index} routerLink={makeLink(item)}>\r\n              <IonLabel>\r\n                <h1>{item.createdAt}</h1>\r\n                <p>{item.userId}</p>\r\n              </IonLabel>\r\n            </IonItem>\r\n          ))}\r\n        </IonList>\r\n        <IonToolbar>\r\n          <IonButton expand=\"block\" onClick={() => newChat()}>Create New</IonButton>\r\n        </IonToolbar>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Tab2;"]},"metadata":{},"sourceType":"module"}