{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, c as createEvent, d as readTask, h, H as Host, e as getElement } from './index-29df6f59.js';\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\nimport { d as debounceEvent, r as raf, f as findItemLabel } from './helpers-5c745fbd.js';\nimport { c as createColorClasses } from './theme-3f0b0c04.js';\nvar textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\nvar textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\n/**\r\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\r\n */\n\nvar Textarea =\n/** @class */\nfunction () {\n  function Textarea(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-input-\" + textareaIds++;\n    this.didBlurAfterEdit = false;\n    this.hasFocus = false;\n    /**\r\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n     */\n\n    this.autocapitalize = 'none';\n    /**\r\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n     */\n\n    this.autofocus = false;\n    /**\r\n     * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\r\n     */\n\n    this.clearOnEdit = false;\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\r\n     */\n\n    this.debounce = 0;\n    /**\r\n     * If `true`, the user cannot interact with the textarea.\r\n     */\n\n    this.disabled = false;\n    /**\r\n     * The name of the control, which is submitted with the form data.\r\n     */\n\n    this.name = this.inputId;\n    /**\r\n     * If `true`, the user cannot modify the value.\r\n     */\n\n    this.readonly = false;\n    /**\r\n     * If `true`, the user must fill in a value before submitting a form.\r\n     */\n\n    this.required = false;\n    /**\r\n     * If `true`, the element will have its spelling and grammar checked.\r\n     */\n\n    this.spellcheck = false;\n    /**\r\n     * If `true`, the element height will increase based on the value.\r\n     */\n\n    this.autoGrow = false;\n    /**\r\n     * The value of the textarea.\r\n     */\n\n    this.value = '';\n\n    this.onInput = function (ev) {\n      if (_this.nativeInput) {\n        _this.value = _this.nativeInput.value;\n      }\n\n      _this.emitStyle();\n\n      _this.ionInput.emit(ev);\n    };\n\n    this.onFocus = function () {\n      _this.hasFocus = true;\n\n      _this.focusChange();\n\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.hasFocus = false;\n\n      _this.focusChange();\n\n      _this.ionBlur.emit();\n    };\n\n    this.onKeyDown = function () {\n      _this.checkClearOnEdit();\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionInput = createEvent(this, \"ionInput\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n  }\n\n  Textarea.prototype.debounceChanged = function () {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  };\n\n  Textarea.prototype.disabledChanged = function () {\n    this.emitStyle();\n  };\n  /**\r\n   * Update the native input element when the value changes\r\n   */\n\n\n  Textarea.prototype.valueChanged = function () {\n    var nativeInput = this.nativeInput;\n    var value = this.getValue();\n\n    if (nativeInput && nativeInput.value !== value) {\n      nativeInput.value = value;\n    }\n\n    this.runAutoGrow();\n    this.emitStyle();\n    this.ionChange.emit({\n      value: value\n    });\n  };\n\n  Textarea.prototype.connectedCallback = function () {\n    this.emitStyle();\n    this.debounceChanged();\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n        detail: this.el\n      }));\n    }\n  };\n\n  Textarea.prototype.disconnectedCallback = function () {\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n        detail: this.el\n      }));\n    }\n  };\n\n  Textarea.prototype.componentDidLoad = function () {\n    var _this = this;\n\n    raf(function () {\n      return _this.runAutoGrow();\n    });\n  };\n\n  Textarea.prototype.runAutoGrow = function () {\n    var _this = this;\n\n    var nativeInput = this.nativeInput;\n\n    if (nativeInput && this.autoGrow) {\n      readTask(function () {\n        nativeInput.style.height = 'auto';\n        nativeInput.style.height = nativeInput.scrollHeight + 'px';\n\n        if (_this.textareaWrapper) {\n          _this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\n        }\n      });\n    }\n  };\n  /**\r\n   * Sets focus on the specified `ion-textarea`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\n\n\n  Textarea.prototype.setFocus = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.nativeInput) {\n          this.nativeInput.focus();\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * Returns the native `<textarea>` element used under the hood.\r\n   */\n\n\n  Textarea.prototype.getInputElement = function () {\n    return Promise.resolve(this.nativeInput);\n  };\n\n  Textarea.prototype.emitStyle = function () {\n    this.ionStyle.emit({\n      'interactive': true,\n      'textarea': true,\n      'input': true,\n      'interactive-disabled': this.disabled,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'has-focus': this.hasFocus\n    });\n  };\n  /**\r\n   * Check if we need to clear the text input if clearOnEdit is enabled\r\n   */\n\n\n  Textarea.prototype.checkClearOnEdit = function () {\n    if (!this.clearOnEdit) {\n      return;\n    } // Did the input value change after it was blurred and edited?\n\n\n    if (this.didBlurAfterEdit && this.hasValue()) {\n      // Clear the input\n      this.value = '';\n    } // Reset the flag\n\n\n    this.didBlurAfterEdit = false;\n  };\n\n  Textarea.prototype.focusChange = function () {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n\n    this.emitStyle();\n  };\n\n  Textarea.prototype.hasValue = function () {\n    return this.getValue() !== '';\n  };\n\n  Textarea.prototype.getValue = function () {\n    return this.value || '';\n  };\n\n  Textarea.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var mode = getIonMode(this);\n    var value = this.getValue();\n    var labelId = this.inputId + '-lbl';\n    var label = findItemLabel(this.el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    return h(Host, {\n      \"aria-disabled\": this.disabled ? 'true' : null,\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a))\n    }, h(\"div\", {\n      class: \"textarea-wrapper\",\n      ref: function (el) {\n        return _this.textareaWrapper = el;\n      }\n    }, h(\"textarea\", {\n      class: \"native-textarea\",\n      \"aria-labelledby\": labelId,\n      ref: function (el) {\n        return _this.nativeInput = el;\n      },\n      autoCapitalize: this.autocapitalize,\n      autoFocus: this.autofocus,\n      enterKeyHint: this.enterkeyhint,\n      inputMode: this.inputmode,\n      disabled: this.disabled,\n      maxLength: this.maxlength,\n      minLength: this.minlength,\n      name: this.name,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellcheck: this.spellcheck,\n      cols: this.cols,\n      rows: this.rows,\n      wrap: this.wrap,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      onKeyDown: this.onKeyDown\n    }, value)));\n  };\n\n  Object.defineProperty(Textarea.prototype, \"el\", {\n    get: function () {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Textarea, \"watchers\", {\n    get: function () {\n      return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Textarea;\n}();\n\nvar textareaIds = 0;\nTextarea.style = {\n  /*STENCIL:MODE:ios*/\n  ios: textareaIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: textareaMdCss\n};\nexport { Textarea as ion_textarea };","map":{"version":3,"sources":["D:/NYP/Y2S1/AdvProg/AVP/AVP/mobiledazala/node_modules/@ionic/core/dist/esm-es5/ion-textarea-ios.entry.js"],"names":["__awaiter","__generator","r","registerInstance","c","createEvent","d","readTask","h","H","Host","e","getElement","b","getIonMode","debounceEvent","raf","f","findItemLabel","createColorClasses","textareaIosCss","textareaMdCss","Textarea","hostRef","_this","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","ionStyle","prototype","debounceChanged","disabledChanged","valueChanged","getValue","runAutoGrow","connectedCallback","document","dispatchEvent","CustomEvent","detail","el","disconnectedCallback","componentDidLoad","style","height","scrollHeight","textareaWrapper","setFocus","_a","focus","getInputElement","Promise","resolve","placeholder","hasValue","render","mode","labelId","label","id","class","Object","assign","color","ref","autoCapitalize","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","maxLength","maxlength","minLength","minlength","readOnly","cols","rows","wrap","defineProperty","get","enumerable","configurable","ios","md","ion_textarea"],"mappings":"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","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport { r as registerInstance, c as createEvent, d as readTask, h, H as Host, e as getElement } from './index-29df6f59.js';\r\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\r\nimport { d as debounceEvent, r as raf, f as findItemLabel } from './helpers-5c745fbd.js';\r\nimport { c as createColorClasses } from './theme-3f0b0c04.js';\r\nvar textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\r\nvar textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\r\n/**\r\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\r\n */\r\nvar Textarea = /** @class */ (function () {\r\n    function Textarea(hostRef) {\r\n        var _this = this;\r\n        registerInstance(this, hostRef);\r\n        this.inputId = \"ion-input-\" + textareaIds++;\r\n        this.didBlurAfterEdit = false;\r\n        this.hasFocus = false;\r\n        /**\r\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n         */\r\n        this.autocapitalize = 'none';\r\n        /**\r\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n         */\r\n        this.autofocus = false;\r\n        /**\r\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\r\n         */\r\n        this.clearOnEdit = false;\r\n        /**\r\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\r\n         */\r\n        this.debounce = 0;\r\n        /**\r\n         * If `true`, the user cannot interact with the textarea.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot modify the value.\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * If `true`, the user must fill in a value before submitting a form.\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * If `true`, the element will have its spelling and grammar checked.\r\n         */\r\n        this.spellcheck = false;\r\n        /**\r\n         * If `true`, the element height will increase based on the value.\r\n         */\r\n        this.autoGrow = false;\r\n        /**\r\n         * The value of the textarea.\r\n         */\r\n        this.value = '';\r\n        this.onInput = function (ev) {\r\n            if (_this.nativeInput) {\r\n                _this.value = _this.nativeInput.value;\r\n            }\r\n            _this.emitStyle();\r\n            _this.ionInput.emit(ev);\r\n        };\r\n        this.onFocus = function () {\r\n            _this.hasFocus = true;\r\n            _this.focusChange();\r\n            _this.ionFocus.emit();\r\n        };\r\n        this.onBlur = function () {\r\n            _this.hasFocus = false;\r\n            _this.focusChange();\r\n            _this.ionBlur.emit();\r\n        };\r\n        this.onKeyDown = function () {\r\n            _this.checkClearOnEdit();\r\n        };\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionInput = createEvent(this, \"ionInput\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    }\r\n    Textarea.prototype.debounceChanged = function () {\r\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n    };\r\n    Textarea.prototype.disabledChanged = function () {\r\n        this.emitStyle();\r\n    };\r\n    /**\r\n     * Update the native input element when the value changes\r\n     */\r\n    Textarea.prototype.valueChanged = function () {\r\n        var nativeInput = this.nativeInput;\r\n        var value = this.getValue();\r\n        if (nativeInput && nativeInput.value !== value) {\r\n            nativeInput.value = value;\r\n        }\r\n        this.runAutoGrow();\r\n        this.emitStyle();\r\n        this.ionChange.emit({ value: value });\r\n    };\r\n    Textarea.prototype.connectedCallback = function () {\r\n        this.emitStyle();\r\n        this.debounceChanged();\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    };\r\n    Textarea.prototype.disconnectedCallback = function () {\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    };\r\n    Textarea.prototype.componentDidLoad = function () {\r\n        var _this = this;\r\n        raf(function () { return _this.runAutoGrow(); });\r\n    };\r\n    Textarea.prototype.runAutoGrow = function () {\r\n        var _this = this;\r\n        var nativeInput = this.nativeInput;\r\n        if (nativeInput && this.autoGrow) {\r\n            readTask(function () {\r\n                nativeInput.style.height = 'auto';\r\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\r\n                if (_this.textareaWrapper) {\r\n                    _this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\r\n     * `input.focus()`.\r\n     */\r\n    Textarea.prototype.setFocus = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.nativeInput) {\r\n                    this.nativeInput.focus();\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the native `<textarea>` element used under the hood.\r\n     */\r\n    Textarea.prototype.getInputElement = function () {\r\n        return Promise.resolve(this.nativeInput);\r\n    };\r\n    Textarea.prototype.emitStyle = function () {\r\n        this.ionStyle.emit({\r\n            'interactive': true,\r\n            'textarea': true,\r\n            'input': true,\r\n            'interactive-disabled': this.disabled,\r\n            'has-placeholder': this.placeholder != null,\r\n            'has-value': this.hasValue(),\r\n            'has-focus': this.hasFocus\r\n        });\r\n    };\r\n    /**\r\n     * Check if we need to clear the text input if clearOnEdit is enabled\r\n     */\r\n    Textarea.prototype.checkClearOnEdit = function () {\r\n        if (!this.clearOnEdit) {\r\n            return;\r\n        }\r\n        // Did the input value change after it was blurred and edited?\r\n        if (this.didBlurAfterEdit && this.hasValue()) {\r\n            // Clear the input\r\n            this.value = '';\r\n        }\r\n        // Reset the flag\r\n        this.didBlurAfterEdit = false;\r\n    };\r\n    Textarea.prototype.focusChange = function () {\r\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\r\n            this.didBlurAfterEdit = true;\r\n        }\r\n        this.emitStyle();\r\n    };\r\n    Textarea.prototype.hasValue = function () {\r\n        return this.getValue() !== '';\r\n    };\r\n    Textarea.prototype.getValue = function () {\r\n        return this.value || '';\r\n    };\r\n    Textarea.prototype.render = function () {\r\n        var _a;\r\n        var _this = this;\r\n        var mode = getIonMode(this);\r\n        var value = this.getValue();\r\n        var labelId = this.inputId + '-lbl';\r\n        var label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a)) }, h(\"div\", { class: \"textarea-wrapper\", ref: function (el) { return _this.textareaWrapper = el; } }, h(\"textarea\", { class: \"native-textarea\", \"aria-labelledby\": labelId, ref: function (el) { return _this.nativeInput = el; }, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value))));\r\n    };\r\n    Object.defineProperty(Textarea.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Textarea, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"debounce\": [\"debounceChanged\"],\r\n                \"disabled\": [\"disabledChanged\"],\r\n                \"value\": [\"valueChanged\"]\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Textarea;\r\n}());\r\nvar textareaIds = 0;\r\nTextarea.style = {\r\n    /*STENCIL:MODE:ios*/ ios: textareaIosCss,\r\n    /*STENCIL:MODE:md*/ md: textareaMdCss\r\n};\r\nexport { Textarea as ion_textarea };\r\n"]},"metadata":{},"sourceType":"module"}